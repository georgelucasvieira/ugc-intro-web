import { c as create_ssr_component, v as validate_component } from "../../../chunks/ssr.js";
import { N as Navbar } from "../../../chunks/Navbar.js";
import { T as Typewriter, C as Chat } from "../../../chunks/UserMessage.svelte_svelte_type_style_lang.js";
const css = {
  code: "main.svelte-11ygegx{display:flex;flex-direction:column;justify-content:center;align-items:center}.first-chat-container.svelte-11ygegx{width:80%;max-width:600px;display:flex;flex-direction:column;align-items:center;margin-bottom:18rem}.messages-chat-container.svelte-11ygegx{width:60%;max-width:600px;display:flex;flex-direction:column;gap:20px}#chat-position.svelte-11ygegx{position:fixed;bottom:0;left:50%;padding-bottom:20px;transform:translateX(-50%)}h2.svelte-11ygegx{margin-bottom:30px}#search-button.svelte-11ygegx{position:fixed;bottom:15vh;right:30%;background-color:white;color:#213547}.footer-background.svelte-11ygegx{position:fixed;bottom:0;left:50%;transform:translateX(-50%);width:100%;height:90px;background-color:var(--background-color)}",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script lang=\\"ts\\">import { onMount } from \\"svelte\\";\\nimport Navbar from \\"../../elements/Navbar.svelte\\";\\nimport Typewriter from \\"svelte-typewriter\\";\\nimport Chat from \\"../../elements/Chat.svelte\\";\\nimport UserMessage from \\"../../elements/UserMessage.svelte\\";\\nimport AgentMessage from \\"../../elements/AgentMessage.svelte\\";\\nimport { fly } from \\"svelte/transition\\";\\nlet writerInterval = [20, 100, 50, 20, 25, 18, 14, 50];\\nlet currentChatMessage = \\"\\";\\nlet startedChat = false;\\nlet startAnimation = false;\\nlet canSearch = false;\\nlet agentResponsesCounter = 0;\\nlet messages = [];\\nfunction handleFirstChatMessage(event) {\\n  currentChatMessage = event.detail;\\n  startedChat = true;\\n  messages = [...messages, { user: \\"A\\", content: currentChatMessage }];\\n  messages = [...messages, { user: \\"B\\", content: \\"\\" }];\\n}\\nfunction handleChatMessages(event) {\\n  currentChatMessage = event.detail;\\n  messages = [...messages, { user: \\"A\\", content: currentChatMessage }];\\n  messages = [...messages, { user: \\"B\\", content: \\"\\" }];\\n  agentResponsesCounter += 1;\\n}\\nfunction chatFinished(event) {\\n  canSearch = event.detail;\\n  let divElem = document.querySelector(\\".content-table\\");\\n  divElem?.setAttribute(\\"style\\", \\"display:flex\\");\\n}\\nonMount(() => {\\n  startAnimation = true;\\n});\\n<\/script>\\n\\n\\n<Navbar />\\n\\n<main>\\n  {#if !startedChat}\\n    <section class=\\"first-chat-container\\">\\n      <Typewriter interval={writerInterval} delay={400}>\\n        <h2>Describe by keyword, task or media</h2>\\n      </Typewriter>\\n\\n      <Chat on:message={handleFirstChatMessage}/>\\n    </section>\\n\\n  {:else}\\n      <section class=\\"messages-chat-container\\">\\n        {#each messages as messageComp (messageComp)}\\n          {#if messageComp.user === 'A'}\\n            <UserMessage message={messageComp.content} />\\n          {/if}\\n\\n          {#if messageComp.user === 'B'}\\n              <AgentMessage\\n                message={\`Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum\`} \\n                on:finished={chatFinished} />\\n          {/if}\\n\\n        {/each}\\n      </section>\\n      \\n      <span class=\\"footer-background\\"></span>\\n\\n      <footer id=\\"chat-position\\">\\n        <Chat on:message={handleChatMessages}/>\\n      </footer>\\n      \\n      {#if canSearch}\\n        <button id=\\"search-button\\" transition:fly={{ y: 200, duration: 700 }} on:click|preventDefault={() => window.location.href = '/search-query/scanning'}>\\n          Analyze\\n        </button>\\n      {/if}\\n  {/if}\\n</main>\\n\\n<style>\\n  main{\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center;\\n    align-items: center;\\n  }\\n\\n  .first-chat-container{\\n    width: 80%;\\n    max-width: 600px;\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    margin-bottom: 18rem;\\n  }\\n\\n  .messages-chat-container{\\n    width: 60%;\\n    max-width: 600px;\\n    display: flex;\\n    flex-direction: column;\\n    gap: 20px;\\n  }\\n\\n  #chat-position{\\n    position:fixed;\\n    bottom:0;\\n    left: 50%;\\n    padding-bottom: 20px;\\n    transform: translateX(-50%);\\n  }\\n  \\n  h2{\\n    margin-bottom: 30px;\\n  }\\n  \\n  #search-button{\\n    position:fixed;\\n    bottom:15vh;\\n    right: 30%;\\n    background-color: white;\\n    color: #213547;\\n  }\\n\\n  .footer-background{\\n    position:fixed;\\n    bottom:0;\\n    left: 50%;\\n    transform: translateX(-50%);\\n    width: 100%;\\n    height: 90px;\\n    background-color: var(--background-color);\\n  }\\n\\n</style>\\n  \\n"],"names":[],"mappings":"AAgFE,mBAAI,CACF,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MACf,CAEA,oCAAqB,CACnB,KAAK,CAAE,GAAG,CACV,SAAS,CAAE,KAAK,CAChB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,WAAW,CAAE,MAAM,CACnB,aAAa,CAAE,KACjB,CAEA,uCAAwB,CACtB,KAAK,CAAE,GAAG,CACV,SAAS,CAAE,KAAK,CAChB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,GAAG,CAAE,IACP,CAEA,6BAAc,CACZ,SAAS,KAAK,CACd,OAAO,CAAC,CACR,IAAI,CAAE,GAAG,CACT,cAAc,CAAE,IAAI,CACpB,SAAS,CAAE,WAAW,IAAI,CAC5B,CAEA,iBAAE,CACA,aAAa,CAAE,IACjB,CAEA,6BAAc,CACZ,SAAS,KAAK,CACd,OAAO,IAAI,CACX,KAAK,CAAE,GAAG,CACV,gBAAgB,CAAE,KAAK,CACvB,KAAK,CAAE,OACT,CAEA,iCAAkB,CAChB,SAAS,KAAK,CACd,OAAO,CAAC,CACR,IAAI,CAAE,GAAG,CACT,SAAS,CAAE,WAAW,IAAI,CAAC,CAC3B,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,IAAI,kBAAkB,CAC1C"}`
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let writerInterval = [20, 100, 50, 20, 25, 18, 14, 50];
  $$result.css.add(css);
  return `${validate_component(Navbar, "Navbar").$$render($$result, {}, {}, {})} <main class="svelte-11ygegx">${`<section class="first-chat-container svelte-11ygegx">${validate_component(Typewriter, "Typewriter").$$render($$result, { interval: writerInterval, delay: 400 }, {}, {
    default: () => {
      return `<h2 class="svelte-11ygegx" data-svelte-h="svelte-1et5yqv">Describe by keyword, task or media</h2>`;
    }
  })} ${validate_component(Chat, "Chat").$$render($$result, {}, {}, {})}</section>`} </main>`;
});
export {
  Page as default
};
